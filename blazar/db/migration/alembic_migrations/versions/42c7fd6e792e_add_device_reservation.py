# Copyright 2021 OpenStack Foundation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""add device reservation

Revision ID: 42c7fd6e792e
Revises: 02e2f2186d98
Create Date: 2021-06-22 15:27:00.239725

"""

# revision identifiers, used by Alembic.
revision = '42c7fd6e792e'
down_revision = '02e2f2186d98'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('devices',
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('name', sa.String(length=255), nullable=False),
                    sa.Column('device_type',
                              sa.Enum('container', 'vm', 'shell',
                                      name='allowed_device_types'),
                              nullable=False),
                    sa.Column('device_driver', sa.Enum(
                        'zun', name='allowed_device_drivers'), nullable=False),
                    sa.Column('reservable', sa.Boolean(),
                              server_default=sa.text('true'), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('device_extra_capabilities',
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('device_id', sa.String(
                        length=36), nullable=False),
                    sa.Column('capability_id', sa.String(
                        length=255), nullable=False),
                    sa.Column('capability_value', sa.Text().with_variant(
                        mysql.MEDIUMTEXT(), 'mysql'), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['capability_id'], ['extra_capabilities.id'], ),
                    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('device_allocations',
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('deleted_at', sa.DateTime(), nullable=True),
                    sa.Column('deleted', sa.String(length=36), nullable=True),
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('device_id', sa.String(
                        length=36), nullable=True),
                    sa.Column('reservation_id', sa.String(
                        length=36), nullable=True),
                    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
                    sa.ForeignKeyConstraint(['reservation_id'], [
                                            'reservations.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('device_reservations',
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('deleted_at', sa.DateTime(), nullable=True),
                    sa.Column('deleted', sa.String(length=36), nullable=True),
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('reservation_id', sa.String(
                        length=36), nullable=True),
                    sa.Column('count_range', sa.String(
                        length=36), nullable=True),
                    sa.Column('resource_properties', sa.Text().with_variant(
                        mysql.MEDIUMTEXT(), 'mysql'), nullable=True),
                    sa.Column('before_end', sa.String(
                        length=36), nullable=True),
                    sa.ForeignKeyConstraint(['reservation_id'], [
                                            'reservations.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.alter_column('instance_reservations', 'affinity',
                    existing_type=mysql.TINYINT(display_width=1),
                    nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('instance_reservations', 'affinity',
                    existing_type=mysql.TINYINT(display_width=1),
                    nullable=True)
    op.drop_table('device_reservations')
    op.drop_table('device_allocations')
    op.drop_table('device_extra_capabilities')
    op.drop_table('devices')
    # ### end Alembic commands ###
